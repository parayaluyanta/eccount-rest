plugins {
    id 'application'

    //https://plugins.gradle.org/plugin/org.springframework.boot
    id 'org.springframework.boot' version '2.5.2'
}

repositories {
    mavenCentral()
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.prayagupd.api'
description = 'eccount'

mainClassName = 'com.api.RESTApplication'

dependencies {
    implementation project(':retailstore-rest-schema')

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    implementation group: 'io.github.resilience4j', name: 'resilience4j-spring-boot2', version: '1.7.0'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.8.2'

    // 2.12.3 does not have @JsonIncludeProperties
    implementation (group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.13.4') {
        exclude (group: "junit")
    }
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.4'

    implementation group: 'io.projectreactor.netty', name: 'reactor-netty', version: '0.9.6.RELEASE'

//    compile 'io.micrometer:micrometer-registry-atlas:latest.release'
    implementation 'io.micrometer:micrometer-registry-prometheus'


//    implementation group: 'org.springframework.boot', name: 'spring-boot', version: '2.5.12'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.5.12'
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.12') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.5.12') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    /**
     * test deps
     */
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.8.1'

//    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'

    testImplementation (group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.5.12') {
        exclude module: "logback-classic"
        exclude module: "spring-boot-starter-logging"
    }
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.5.1'
    testImplementation group: 'com.tngtech.java', name: 'junit-dataprovider', version: '1.13.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
}

test {
    useJUnitPlatform()

    testLogging.showStandardStreams = true

    jacoco {
        excludes += []
    }

    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed"
    }

    test.finalizedBy(jacocoTestReport)
    test.finalizedBy(jacocoTestCoverageVerification)

    dependsOn cleanTest
}

jacoco {
    toolVersion = "0.8.3"
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}
